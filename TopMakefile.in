##########################################################################
#   Ocaml-fileutils                                                      #
#                                                                        #
#   Copyright (C) 2003, 2004 Sylvain Le Gall <sylvain@le-gall.net>       #
#                                                                        #
#   This program is free software; you can redistribute it and/or        #
#   modify it under the terms of the GNU Library General Public          #
#   License as published by the Free Software Foundation; either         #
#   version 2 of the License, or any later version ; with the OCaml      #
#   static compilation exception.                                        #
#                                                                        #
#   This program is distributed in the hope that it will be useful,      #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of       #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                 #
#   See the LICENCE file for more details.                               #
#                                                                        #
#   You should have received a copy of the GNU General Public License    #
#   along with this program; if not, write to the Free Software          #
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA             #
#   02111-1307  USA                                                      #
#                                                                        #
#   This file is base on OCamlMakefile by Jean-Cristophe FILLIATRE       #
#   Credits should be given to :                                         #
#   sample Makefile for Objective Caml                                   #
#   Copyright (C) 2001 Jean-Christophe FILLIATRE                         #
#                                                                        #
#   Contact: sylvain@le-gall.net                                         #
#                                                                        #
##########################################################################

#
# sample Makefile for Objective Caml
# Copyright (C) 2001 Jean-Christophe FILLIATRE
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License version 2, as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# See the GNU Library General Public License version 2 for more details
# (enclosed in the file LGPL).

# where to install the binaries
prefix=@prefix@
exec_prefix=@exec_prefix@
BINDIR=@bindir@
LIBDIR=@libdir@
DOCDIR=@DOCDIR@

# other variables set by ./configure
USE_OCAMLFIND=@USE_OCAMLFIND@

OCAMLBEST    = @OCAMLBEST@
OCAMLVERSION = @OCAMLVERSION@
OCAMLWIN32   = @OCAMLWIN32@
OCAMLP4      = @OCAMLP4@
OCAMLYACC    = @OCAMLYACC@
OCAMLLEX     = @OCAMLLEX@
OCAMLDOC     = @OCAMLDOC@
EXE          = @EXE@
TEMPBUILD    = @BUILDDIR@
TEMPBUILDLIB = @BUILDDIR@/lib
TEMPBUILDEXE = @BUILDDIR@/bin
TEMPBUILDDOC = @BUILDDIR@/doc

#INSTALLLIB    (destdir,name,files)  : install a library
#REMOVELIB     (destdir,name)        : uninstall a library
#INSTALLEXE    (destdir,file)        : install an executable
#REMOVEEXE     (destdir,file)        : uninstall an executable
#INSTALLDOC    (destdir,file)        : install an odoc file
#REMOVEDOC     (destdir,file)        : uninstall an odoc file
#CLI_OCAMLCLIB (requires,predicates) : compile a lib ( ocamlc )
#CLI_OCAMLOLIB (requires,predicates) : compile a lib ( ocamlopt )
#CLI_OCAMLCEXE (requires,predicates) : compile an executable ( ocamlc )
#CLI_OCAMLOEXE (requires,predicates) : compile an executable ( ocamlopt )
#CLI_OCAMLC    (requires,predicates) : compile ( ocamlc )
#CLI_OCAMLOPT  (requires,predicates) : compile ( ocamlopt )

INSTALLEXE = cp $2 $1
REMOVEEXE  = $(RM) $2/$1
INSTALLDOC = cp $2 $1
REMOVEDOC  = $(RM) $2/$1

ifeq "$(USE_OCAMLFIND)" "yes"
	OCAMLC     = @OCAMLFIND@ ocamlc 
	OCAMLOPT   = @OCAMLFIND@ ocamlopt
	OCAMLDEP   = @OCAMLFIND@ ocamldep
	OCAMLFIND  = @OCAMLFIND@
	OCAMLPATH := $(OCAMLPATH):$(TEMPBUILDLIB)/
	
	CLI_INSTALLIB  = $(OCAMLFIND) install -destdir $1 $2 $3
	CLI_REMOVELIB  = $(OCAMLFIND) remove -destdir $1 $2
	CLI_OCAMLCLIB  = $(OCAMLC)   -a -o $3.cma  -package "$1" -predicates "$2" -linkpkg
	CLI_OCAMLOLIB  = $(OCAMLOPT) -a -o $3.cmxa -package "$1" -predicates "$2"
	CLI_OCAMLCEXE  = $(OCAMLC)   -o $3.byte    -package "$1" -predicates "$2" -linkpkg
	CLI_OCAMLOEXE  = $(OCAMLOPT) -o $3.opt     -package "$1" -predicates "$2" -linkpkg
	CLI_OCAMLC     = $(OCAMLC)   -package "$1" -predicates "$2"
	CLI_OCAMLOPT   = $(OCAMLOPT) -package "$1" -predicates "$2"
	
	export OCAMLPATH
	
else
	EXTRA_CFLAGS = 
	EXTRA_CLIBS =

	COMPUTE_CFLAGS = \
		$(if $(filter unix,$1),) \
		$(if $(filter str,$1),) \
		$(call EXTRA_CFLAGS,$1,$2)
		
	COMPUTE_CLIBS  = \
		$(if $(filter unix,$1),unix.cma) \
		$(if $(filter str,$1),str.cma) \
		$(call EXTRA_CLIBS,$1,$2)

	COMPUTE_OFLAGS = \
		$(call COMPUTE_CFLAGS,$1,$2)

	COMPUTE_OLIBS = \
		$(patsubst %.cma,%.cmxa,$(call COMPUTE_CLIBS,$1,$2))

	OCAMLC     = @OCAMLC@
	OCAMLOPT   = @OCAMLOPT@
	OCAMLDEP   = @OCAMLDEP@
	CLI_INSTALLIB  = mkdir $1/$2; cp $3 $1/$2
	CLI_REMOVELIB  = $(RM) -r $1/$2
	CLI_OCAMLCLIB  = $(OCAMLC)   -linkall -a -o $3.cma  \
		$(call COMPUTE_CFLAGS,$1,$2) $(call COMPUTE_CLIBS,$1,$2)
	CLI_OCAMLOLIB  = $(OCAMLOPT) -a -o $3.cmxa $(call COMPUTE_OFLAGS,$1,$2) 
	CLI_OCAMLCEXE  = $(OCAMLC)   -linkall -o $3.byte $(call COMPUTE_CFLAGS,$1,$2) \
		$(call COMPUTE_CLIBS,$1,$2)
	CLI_OCAMLOEXE  = $(OCAMLOPT) -linkall -o $3.opt  $(call COMPUTE_OFLAGS,$1,$2) \
		$(call COMPUTE_OLIBS,$1,$2)
	CLI_OCAMLC     = $(OCAMLC)   $(call COMPUTE_CFLAGS,$1,$2) 
	CLI_OCAMLOPT   = $(OCAMLOPT) $(call COMPUTE_OFLAGS,$1,$2)
endif

all: $(if $(LIBRARY), install-buildlib, $(OCAMLBEST))
all: $(if $(ODOC), install-builddoc,)

CMX = $(CMO:.cmo=.cmx)

GENERATED = version.ml

byte:      $(if $(LIBRARY), $(NAME).cma, $(NAME).byte)
opt:       $(if $(LIBRARY), $(NAME).cmxa, $(NAME).opt)
install:   $(if $(LIBRARY), install-lib, install-exe)
install:   $(if $(ODOC), install-doc,)
uninstall: $(if $(LIBRARY), uninstall-lib, uninstall-exe)
uninstall: $(if $(ODOC), uninstall-doc,)

# Build the lib

$(NAME).cma: $(CMO) 
	$(call CLI_OCAMLCLIB,$(REQUIRES),$(PREDICATES),$(NAME)) $(INCLUDES) $(CMO)

$(NAME).cmxa: $(CMX)
	$(call CLI_OCAMLOLIB,$(REQUIRES),$(PREDICATES),$(NAME)) $(INCLUDES) $(CMX)

install-buildlib: byte opt 
	$(call CLI_REMOVELIB,$(TEMPBUILDLIB),$(NAME))
	$(call CLI_INSTALLIB,$(TEMPBUILDLIB),$(NAME),$(INSTALLIB))

install-lib: byte opt
	$(call CLI_INSTALLIB,$(LIBDIR),$(NAME),$(INSTALLIB))

uninstall-lib: 
	$(call CLI_REMOVELIB,$(LIBDIR),$(NAME))

# Write the documentation

$(NAME).odoc: $(CMO)
	$(OCAMLDOC) $(ODOC) -dump $@
	
install-builddoc: $(NAME).odoc
	$(call INSTALLDOC,$(TEMPBUILDDOC),$(NAME).odoc)

install-doc: $(NAME).odoc
	$(call INSTALLDOC,$(DOCDIR),$(NAME).odoc)

uninstall-doc: 
	$(call UNINSTALLDOC,$(DOCDIR),$(NAME).odoc)

# Build the executable

BLIBS = $(addsuffix .cma,$(LIBS))

$(NAME).byte: $(CMO)
	$(call CLI_OCAMLCEXE,$(REQUIRES),$(PREDICATES),$(NAME)) $(INCLUDES) $(BLIBS) $(CMO)

#install-exebuild: $(NAME).byte
#	$(call INSTALLEXE,$(TEMPBUILDEXE),$(NAME).byte)
#
#install-exe: $(NAME).byte
#	$(call INSTALLEXE,$(BINDIR),$(NAME).byte)

OLIBS = $(addsuffix .cmxa,$(LIBS))

$(NAME).opt: $(CMX)
	$(call CLI_OCAMLOEXE,$(REQUIRES),$(PREDICATES),$(NAME))  $(INCLUDES) $(OLIBS) $(CMX)

#install-exebuild: $(NAME).opt
#	$(call INSTALLEXE,$(TEMPBUILDEXE),$(NAME).opt)
#
#install-exe: $(NAME).opt
#	$(call INSTALLEXE,$(BINDIR),$(NAME).opt)
#
#uninstall-exe: 
#	$(call REMOVEEXE,$(BINDIR),$(NAME).opt)
#	$(call REMOVEEXE,$(BINDIR),$(NAME).byte)

# Extra files

VERSION=0.1.1

version.ml: 
	echo "let version = \""$(VERSION)"\"" > version.ml
	echo "let date = \""`date`"\"" >> version.ml

META:
	echo "requires = \""$(REQUIRES)"\"" > META
	echo "version = \""$(VERSION)"\"" >> META
	echo "predicates = \""$(PREDICATES)"\"" >> META
	echo "archive(byte) = \""$(NAME).cma"\"" >> META
	echo "archive(native) = \""$(NAME).cmxa"\"" >> META
	
install-buildlib: META
install-lib: META


.SUFFIXES: .mli .ml .cmi .cmo .cmx .mll .mly .zog

%.cmi: %.mli
	$(call CLI_OCAMLC,$(REQUIRES),$(PREDICATES)) $(INCLUDES) -c $<

%.cmo: %.ml
	$(call CLI_OCAMLC,$(REQUIRES),$(PREDICATES)) $(INCLUDES) -c $<

%.o: %.ml
	$(call CLI_OCAMLOPT,$(REQUIRES),$(PREDICATES)) $(INCLUDES) -c $<
	
%.cmx: %.ml
	$(call CLI_OCAMLOPT,$(REQUIRES),$(PREDICATES)) $(INCLUDES) -c $<
	
%.ml:%.mll
	$(OCAMLLEX) $<

%.mli %.ml: %.mly
	$(OCAMLYACC) -v $<

%.ml: %.zog
	$(OCAMLP4) pa_o.cmo pa_zog.cma  pr_o.cmo -impl $< > $@
	
clean::
	-$(RM) *.cm[iox] *.o *~
	-$(RM) $(GENERATED) parser.output
	-$(RM) $(NAME).byte $(NAME).opt
	-$(RM) $(NAME).cma $(NAME).cmxa
	-$(RM) $(NAME).a META
	-$(RM) $(NAME).odoc
	-$(RM) .depend

dist-clean distclean:: clean
	-$(RM) TopMakefile Makefile config.cache config.log config.status

.depend depend:: $(GENERATED)
	-$(RM) .depend
	$(OCAMLDEP) $(INCLUDES) *.ml *.mli > .depend

include .depend
